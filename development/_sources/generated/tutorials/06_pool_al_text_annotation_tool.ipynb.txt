{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Paper Annotation Tool using Text Embeddings"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "> **_Google Colab Note:_** If the notebook fails to run after installing the needed packages, try to restart the runtime (Ctrl + M) under Runtime -> Restart session.\n",
        "\n",
        "[![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/scikit-activeml/scikit-activeml-docs/blob/gh-pages/latest/generated/tutorials_colab//06_pool_al_text_annotation_tool.ipynb)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "**Notebook Dependencies**\n",
        "\n",
        "Uncomment the following cell to install all dependencies for this tutorial."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x0BxO18zdzwn",
        "outputId": "4f496be3-ebed-450a-898d-0dac9fcd6542"
      },
      "outputs": [],
      "source": [
        "# !pip install scikit-activeml datasets jupyter_ui_poll"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "<hr style=\"border-style: solid; border-top: 1px solid; border-right: 0; border-bottom: 0; border-left: 0;\">"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "This notebook showcases an example annotation tool to classify arXiv papers. The overall task is to classify arXiv paper into machine learning papers (cs.AI, cs.LG, cs.CV) and non-machine learning papers (cs.LO, cs.NI, cs.CR, cs.PL) which are class 1 and 0, respectively. We use `ipywidgets` to create the interface, such that users can annotate samples directly within the notebook. The dataset is a subset of the `subset_arxiv_papers_with_embeddings` dataset on [huggingface](https://huggingface.co/datasets/MongoDB/subset_arxiv_papers_with_embeddings) from MongoDB which already provides precomputed embeddings.\n",
        "\n",
        "> **_NOTE:_** For testing execute this notebook on your local machine or click the Open in Google Colab button above."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "Ql6c7wbfbKlQ"
      },
      "outputs": [],
      "source": [
        "import datasets\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import ipywidgets as widgets\n",
        "import time\n",
        "import textwrap\n",
        "from sklearn.model_selection import train_test_split\n",
        "from IPython.display import display\n",
        "from jupyter_ui_poll import ui_events"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Dataset\n",
        "\n",
        "First, we have to create our dataset, which we want to annotate. The papers are filtered according to their assigned category. To simplify the task, we exclude all papers that would belong to both classes. Based on the filtered papers, we subsample a balanced dataset."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287,
          "referenced_widgets": [
            "3d2e823b26764a4bb6ee1263f7540a6e",
            "31f2cb542c234a73a458598f858ab0ea",
            "6c70d082e69f4fd7b2ab2664d7a5c4fa",
            "449cfe6c623148cc90e910d16f7e2e16",
            "12b59f932c5e4e0f91d734d2734d3ad9",
            "bdc26182b0604220ba7fcdd12aa4b60d",
            "ab997738bb014abe9700b6762ec5fc17",
            "54c0a9cd436e463b954e203db622af89",
            "d9f7f53be39541f7b2af655c23681b6d",
            "8c29c360c6bb46b5ad55743720912291",
            "573e0c84a3da42fba62f95ed2ccb91c1",
            "dac9ea749aea48888bdb11ce4d0b7e44",
            "019b66f303204a24b9d57ab5faef6b0d",
            "f3ee69a2b91d4fa384f557763650f133",
            "fb015057e08c4e5fae36392280603e5b",
            "e65cec7450b34bd1a756e46fe37afc84",
            "0b034663c2bf493d9284be73aede4c9c",
            "94cc5882db984867b4af2dd13bf28dcf",
            "4f483afd17aa4368943f7fbd0ddeba4c",
            "6c41b494477240e5947089e103cfc53d",
            "9b9c5c95ebf746d5a1e5f06d96cd3e79",
            "a8a848800f1b4f709d594ac0a688d013",
            "0a9344cc59704f5ebf2c77e76d56dbdc",
            "b08d232560564081b9ab172504a3d6e7",
            "02e1c7b2c33d44c79217d724dbc2fa10",
            "018c2704c5af48cbbf83c2c28469c742",
            "c8aff5b9febf427793a3b682caa01af6",
            "aed6ac245cc54f649dfadd00cda606c3",
            "9f64d642d04e46bc9db94fc2992c1093",
            "39145780dab04311b1989e8b9e4053e0",
            "7ab12a559474405cb1e29bab8ec4a02e",
            "bb0948b78eaa479fbefe3cf988f6ea1d",
            "519d9823101a43fcb3373c9340691da2"
          ]
        },
        "id": "xzX5L32Vdt_R",
        "outputId": "5c065963-10c9-43ff-849b-dde7472d390e"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "Repo card metadata block was not found. Setting CardData to empty.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "c0: 267\n",
            "c1: 267\n"
          ]
        }
      ],
      "source": [
        "random_state = np.random.RandomState(0)\n",
        "\n",
        "\n",
        "# functions to check if the provided category is indicative of class 0 or 1\n",
        "def is_c0_category(category):\n",
        "    return category in [\"cs.LO\", \"cs.NI\", \"cs.CR\", \"cs.PL\"]\n",
        "\n",
        "\n",
        "def is_c1_category(category):\n",
        "    return category in [\"cs.AI\", \"cs.LG\", \"cs.CV\"]\n",
        "\n",
        "\n",
        "# check if one of the assigned category of a paper is assigned to a class\n",
        "def is_valid_paper(category_field, category_fn):\n",
        "    categories = category_field.split()\n",
        "    valid_category = [category_fn(c) for c in categories]\n",
        "    return any(valid_category)\n",
        "\n",
        "\n",
        "# download dataset from huggingface\n",
        "cache_dir = \"huggingface_cache/datasets/\"\n",
        "arxiv = datasets.load_dataset(\n",
        "    \"MongoDB/subset_arxiv_papers_with_embeddings\", cache_dir=cache_dir\n",
        ")\n",
        "\n",
        "# filter papers according to their categories\n",
        "is_c1 = np.array(\n",
        "    [is_valid_paper(c, is_c1_category) for c in arxiv[\"train\"][\"categories\"]]\n",
        ")\n",
        "is_c0 = np.array(\n",
        "    [is_valid_paper(c, is_c0_category) for c in arxiv[\"train\"][\"categories\"]]\n",
        ")\n",
        "\n",
        "# exclude paper that belong to both classes\n",
        "is_exclusive_c1 = np.logical_and(is_c1, ~is_c0)\n",
        "is_exclusive_c0 = np.logical_and(is_c0, ~is_c1)\n",
        "\n",
        "# calculate maximum subset size per class\n",
        "subset_size = min(np.sum(is_exclusive_c0), np.sum(is_exclusive_c1))\n",
        "\n",
        "# draw subset per class\n",
        "is_exclusive_c1_subset = random_state.choice(\n",
        "    np.where(is_exclusive_c1)[0], subset_size, replace=False\n",
        ")\n",
        "is_exclusive_c0_subset = random_state.choice(\n",
        "    np.where(is_exclusive_c0)[0], subset_size, replace=False\n",
        ")\n",
        "\n",
        "# get embeddings for subsets\n",
        "c1_embeddings = np.array(arxiv[\"train\"][\"embedding\"])[is_exclusive_c1_subset]\n",
        "c0_embeddings = np.array(arxiv[\"train\"][\"embedding\"])[is_exclusive_c0_subset]\n",
        "print(f\"c0: {len(c0_embeddings)}\")\n",
        "print(f\"c1: {len(c1_embeddings)}\")\n",
        "\n",
        "# create dataset as needed for scikit-activeml and the annotation tool\n",
        "X_indices = np.concatenate(\n",
        "    [is_exclusive_c0_subset, is_exclusive_c1_subset], dtype=int\n",
        ")\n",
        "X_embeddings = np.concatenate([c0_embeddings, c1_embeddings])\n",
        "y = np.array([0] * len(c0_embeddings) + [1] * len(c1_embeddings), dtype=float)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## User Interface\n",
        "\n",
        "We need to define the user interface, such that the notebook can interact with the user. We use `ipywidgets` to create the shown widgets and `jupyter_ui_poll` to handle the polling for the events. The user interface iteratively presents a single sample for which the user can press a button to indicate to which class this sample belongs to. We also offer an additional button that always classifies the shown sample correctly. An output widget is updated after every annotation and shows the current performance of the trained classifier (with user annotations and ideal annotations). We also show the learning curve which shows the performance over time.\n",
        "\n",
        "The `process_batch_annotation_UI` function offers two boolean flags to customize the user interface. If `show_correct_class` is set to `True`, the user interface also shows what the real class of the sample is. If `skip_interaction` is set to `True`, samples are annotated with the real class automatically. "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "EAmWZGs2n5F3"
      },
      "outputs": [],
      "source": [
        "# this function removes whitespace and wraps the text again so it fits into the annotation tool\n",
        "def normalize_text(text):\n",
        "    text_lines = text.replace(\"\\t\", \" \").replace(\"\\n\", \" \").strip().split()\n",
        "    text_single_line = \" \".join(text_lines)\n",
        "    wrapped_text = textwrap.fill(text_single_line, width=70)\n",
        "    return wrapped_text\n",
        "\n",
        "# this function blocks the execution to wait for button presses\n",
        "def wait_for_interaction():\n",
        "    global button_pressed\n",
        "    with ui_events() as poll:\n",
        "        poll(1000)\n",
        "        while not button_pressed:\n",
        "            poll(10)\n",
        "            time.sleep(0.01)\n",
        "\n",
        "# a button callback used to save the annotation\n",
        "def button_clicked(i, arg):\n",
        "    global button_pressed\n",
        "    global results\n",
        "    if not button_pressed:\n",
        "        results.append(i)\n",
        "        button_pressed = True\n",
        "\n",
        "# create buttons and connect the callbacks\n",
        "button_c0 = widgets.Button(\n",
        "    description=f\"Other\",\n",
        "    tooltip=\"Paper belongs to cs.LO, cs.NI, cs.CR, cs.PL.\",\n",
        ")\n",
        "button_c0.on_click(lambda arg: button_clicked(0, arg))\n",
        "button_c1 = widgets.Button(\n",
        "    description=f\"Machine Learning\",\n",
        "    tooltip=\"Paper belongs to cs.AI, cs.LG, or cs.CV.\",\n",
        ")\n",
        "button_c1.on_click(lambda arg: button_clicked(1, arg))\n",
        "button_creal = widgets.Button(\n",
        "    description=f\"Correct Class\",\n",
        "    tooltip=\"Use this button to always annotate with the real class.\",\n",
        ")\n",
        "button_creal.on_click(lambda arg: button_clicked(-1, arg))\n",
        "\n",
        "# output to display the sample that should be annotated\n",
        "output_sample = widgets.Output()\n",
        "# output to show a summary of the performance and annotation\n",
        "output_stats = widgets.Output()\n",
        "# output to show learning curves\n",
        "output_plot = widgets.Output()\n",
        "\n",
        "# create the layout for the annotation tool\n",
        "buttons = widgets.VBox([button_c1, button_c0, button_creal])\n",
        "buttons.layout.width = \"200px\"\n",
        "\n",
        "output_sample.layout.width = \"590px\"\n",
        "\n",
        "output_stats.layout.height = \"450px\"\n",
        "output_stats.layout.width = \"250px\"\n",
        "\n",
        "output_plot.layout.height = \"450px\"\n",
        "output_plot.layout.width = \"540px\"\n",
        "\n",
        "stats_box = widgets.HBox([output_stats, output_plot])\n",
        "sample_box = widgets.HBox([buttons, output_sample])\n",
        "output_box = widgets.VBox([stats_box, sample_box])\n",
        "\n",
        "\n",
        "# this function processes handles the updates for the annotation tool\n",
        "def process_batch_annotation_UI(\n",
        "    cycle,\n",
        "    learning_curve,\n",
        "    learning_curve_ideal,\n",
        "    query_indices,\n",
        "    X_indices_train,\n",
        "    y_train_true,\n",
        "    num_annot_errors,\n",
        "    num_total_annot,\n",
        "    batch_size,\n",
        "    # set this flag to True to additionally show the real class\n",
        "    show_correct_class=False,\n",
        "    # set this flag if the presented papers should be annotated automatically\n",
        "    skip_interaction=False,\n",
        "):\n",
        "    # initialize global variables that are used by the callbacks\n",
        "    global button_pressed\n",
        "    global results\n",
        "    button_pressed = False\n",
        "    results = []\n",
        "    # draw plot\n",
        "    with output_plot:\n",
        "        fig, ax = plt.subplots(figsize=(6, 4))\n",
        "        ax.set_xlabel(\"Cycle\")\n",
        "        ax.set_ylabel(\"Accuracy\")\n",
        "        ax.plot(learning_curve, label=\"with annotated labels\")\n",
        "        ax.plot(learning_curve_ideal, label=\"with ideally annotated labels\")\n",
        "        ax.set_xlim(0, len(X_indices_train) // batch_size)\n",
        "        ax.legend(loc=\"upper center\", bbox_to_anchor=(0.5, -0.175), ncol=2)\n",
        "        output_plot.clear_output(wait=True)\n",
        "        display(fig)\n",
        "        plt.close(fig)\n",
        "\n",
        "    # update the stats text\n",
        "        with output_stats:\n",
        "            output_stats.clear_output(wait=True)\n",
        "            print(f\"Cycle: {cycle}\")\n",
        "            print(f\"Accuracy:          {learning_curve[-1]:.3f}\")\n",
        "            print(f\"Accuracy (ideal):  {learning_curve_ideal[-1]:.3f}\")\n",
        "            print(f\"AULC:              {np.mean(learning_curve):.3f}\")\n",
        "            print(f\"AULC (ideal):      {np.mean(learning_curve_ideal):.3f}\")\n",
        "            print(f\"Annotation errors: {num_annot_errors}/{num_total_annot}\")\n",
        "\n",
        "    # iterate over all queried samples and process buttons and update outputs\n",
        "    # after each annotations\n",
        "    for batch_index, query_index in enumerate(query_indices):\n",
        "        # reset button_pressed variable, such that waiting for button presses\n",
        "        # works\n",
        "        button_pressed = False\n",
        "        # only do loop once if skip_interaction is True\n",
        "        if skip_interaction and batch_index > 0:\n",
        "            break\n",
        "        # update the sample text which should be annotated\n",
        "        with output_sample:\n",
        "            output_sample.clear_output(wait=True)\n",
        "            title = normalize_text(\n",
        "                arxiv[\"train\"][int(X_indices_train[int(query_index)])][\"title\"]\n",
        "            )\n",
        "            abstract = normalize_text(\n",
        "                arxiv[\"train\"][int(X_indices_train[int(query_index)])][\n",
        "                    \"abstract\"\n",
        "                ]\n",
        "            )\n",
        "            print(f\"Batch index: {batch_index}/{batch_size}\")\n",
        "            if show_correct_class:\n",
        "                correct_class_str = (\n",
        "                    \"Machine Learning\"\n",
        "                    if y_train_true[query_index] > 0\n",
        "                    else \"Other\"\n",
        "                )\n",
        "                print(f\"Correct class: {correct_class_str}\")\n",
        "            print(\"Title:\")\n",
        "            print(title)\n",
        "            print()\n",
        "            print(\"Abstract:\")\n",
        "            print(abstract)\n",
        "        # replace all labels with the real labels if skip_interaction=True,\n",
        "        # otherwise wait for the respective button input\n",
        "        if skip_interaction:\n",
        "            results.extend(y_train_true[query_indices])\n",
        "        else:\n",
        "            wait_for_interaction()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Annotation & Active Learning Cycle\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The following cell shows the active learning cycle. The classifier (`clf`), the query strategy (`qs`) and the batch size (`batch_size`) are marked with a todo comment and can be changed freely. Note, that you might have to adjust the `call_func` call to pass additional parameters to the query strategy's `query` function.\n",
        "\n",
        "The UI updates itself after pressing one of the buttons used for annotation to show the next sample to annotate. The learning curves are only updated once per batch. "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "805c09e6ebe54af68126d7869aa9d245",
            "37b1258047d14583a6abf1d6bb44b984",
            "c2ac76677a5a44f5ae8317fc52b29692",
            "cbba931d922b426780f5186dfac592c4",
            "899a9ff55b6641bab7f50c566c2f7876",
            "a51b56005d354fc9abeadcad4d7c4c14",
            "7eb6c7b6a7b64864804b2375b37a56c0",
            "c399b72cbdb247d9ab73886f457c141f",
            "6d61a3724d9f4fec9b37d1276b259242",
            "13bf8ee801c94f81a68e5d1e1dfce7ee"
          ]
        },
        "id": "uZLWpUkufB07",
        "outputId": "7c0e7acb-1900-4798-bb98-3478d7176014"
      },
      "outputs": [],
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "from skactiveml.classifier import SklearnClassifier\n",
        "from skactiveml.pool import RandomSampling\n",
        "from skactiveml.utils import call_func\n",
        "\n",
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "# split data into a train and test set\n",
        "X_indices_train, X_indices_test, X_train, X_test, y_train_true, y_test = (\n",
        "    train_test_split(X_indices, X_embeddings, y, shuffle=True, random_state=0)\n",
        ")\n",
        "# initialize the labels for the training set\n",
        "# y_train will consist of the annotations the user does\n",
        "y_train = np.full_like(y_train_true, np.nan)\n",
        "# y_train_ideal is labeled under a perfect annotator\n",
        "y_train_ideal = np.full_like(y_train_true, np.nan)\n",
        "\n",
        "# number of queries per batch\n",
        "# TODO: change the batch size to see how it affects various query strategies\n",
        "batch_size = 5\n",
        "\n",
        "# initialize the classifier\n",
        "# TODO: replace with a classifier of choice\n",
        "clf = SklearnClassifier(\n",
        "    LogisticRegression(random_state=0), classes=[0, 1], random_state=0\n",
        ")\n",
        "# initialize the query strategy\n",
        "# TODO: replace with a query strategy of choice\n",
        "qs = RandomSampling(random_state=0)\n",
        "\n",
        "# the accuracies per cycle\n",
        "learning_curve = []\n",
        "learning_curve_ideal = []\n",
        "# number of annotation errors\n",
        "num_annotation_errors = 0\n",
        "# number of total annotations\n",
        "num_total_annotations = 0\n",
        "\n",
        "# clear all outputs\n",
        "output_sample.clear_output()\n",
        "output_stats.clear_output()\n",
        "output_plot.clear_output()\n",
        "\n",
        "# display the UI\n",
        "display(output_box)\n",
        "\n",
        "# iterate over all cycles\n",
        "for cycle in range(0, len(X_train) // batch_size):\n",
        "    # calculate accuracy for this cycle with ideal annotations\n",
        "    clf.fit(X_train, y_train_ideal)\n",
        "    score_ideal = clf.score(X_test, y_test)\n",
        "    learning_curve_ideal.append(score_ideal)\n",
        "    # calculate accuracy for this cycle with user annotations\n",
        "    clf.fit(X_train, y_train)\n",
        "    score = clf.score(X_test, y_test)\n",
        "    learning_curve.append(score)\n",
        "\n",
        "    # get indices to query labels for from the query strategy\n",
        "    query_indices = call_func(\n",
        "        qs.query,\n",
        "        X=X_train,\n",
        "        y=y_train,\n",
        "        batch_size=batch_size,\n",
        "        clf=clf,\n",
        "        fit_clf=False,\n",
        "    )\n",
        "\n",
        "    # update UI\n",
        "    process_batch_annotation_UI(\n",
        "        cycle,\n",
        "        learning_curve,\n",
        "        learning_curve_ideal,\n",
        "        query_indices,\n",
        "        X_indices_train,\n",
        "        y_train_true,\n",
        "        num_annotation_errors,\n",
        "        num_total_annotations,\n",
        "        batch_size,\n",
        "        show_correct_class=False,\n",
        "        skip_interaction=False,\n",
        "    )\n",
        "\n",
        "    # Update labels with new annotations\n",
        "    # replace all -1 labels (Correct Class button) with the correct label\n",
        "    results = [\n",
        "        y_train_true[i] if r == -1 else r\n",
        "        for i, r in zip(query_indices, results)\n",
        "    ]\n",
        "    # set label in y_train and y_train_ideal\n",
        "    y_train[query_indices] = results\n",
        "    y_train_ideal[query_indices] = y_train_true[query_indices]\n",
        "    # increase number of errors and total annotations\n",
        "    num_annotation_errors += np.sum(y_train_true[query_indices] != results)\n",
        "    num_total_annotations += len(results)"
      ]
    },
    {
      "attachments": {
        "image.png": {
          "image/png": ""
        }
      },
      "cell_type": "markdown",
      "metadata": {
        "id": "b6sIVYMibnGx"
      },
      "source": [
        "The cell above produces an output which looks like the following image:\n",
        "\n",
        "![image.png](attachment:image.png)"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "scikit-activeml-docs",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.9"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "018c2704c5af48cbbf83c2c28469c742": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HTMLModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_bb0948b78eaa479fbefe3cf988f6ea1d",
            "placeholder": "​",
            "style": "IPY_MODEL_519d9823101a43fcb3373c9340691da2",
            "value": " 50000/50000 [00:07&lt;00:00, 6598.30 examples/s]"
          }
        },
        "019b66f303204a24b9d57ab5faef6b0d": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HTMLModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_0b034663c2bf493d9284be73aede4c9c",
            "placeholder": "​",
            "style": "IPY_MODEL_94cc5882db984867b4af2dd13bf28dcf",
            "value": "Downloading data: 100%"
          }
        },
        "02e1c7b2c33d44c79217d724dbc2fa10": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "FloatProgressModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_39145780dab04311b1989e8b9e4053e0",
            "max": 50000,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_7ab12a559474405cb1e29bab8ec4a02e",
            "value": 50000
          }
        },
        "0a9344cc59704f5ebf2c77e76d56dbdc": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HBoxModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_b08d232560564081b9ab172504a3d6e7",
              "IPY_MODEL_02e1c7b2c33d44c79217d724dbc2fa10",
              "IPY_MODEL_018c2704c5af48cbbf83c2c28469c742"
            ],
            "layout": "IPY_MODEL_c8aff5b9febf427793a3b682caa01af6"
          }
        },
        "0b034663c2bf493d9284be73aede4c9c": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "12b59f932c5e4e0f91d734d2734d3ad9": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "13bf8ee801c94f81a68e5d1e1dfce7ee": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "31f2cb542c234a73a458598f858ab0ea": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HTMLModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_bdc26182b0604220ba7fcdd12aa4b60d",
            "placeholder": "​",
            "style": "IPY_MODEL_ab997738bb014abe9700b6762ec5fc17",
            "value": "Downloading readme: 100%"
          }
        },
        "37b1258047d14583a6abf1d6bb44b984": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "ButtonModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "Machine Learning",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_899a9ff55b6641bab7f50c566c2f7876",
            "style": "IPY_MODEL_a51b56005d354fc9abeadcad4d7c4c14",
            "tooltip": "Paper belongs to cs.LO, cs.NI, cs.CR, cs.PL]"
          }
        },
        "39145780dab04311b1989e8b9e4053e0": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3d2e823b26764a4bb6ee1263f7540a6e": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HBoxModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_31f2cb542c234a73a458598f858ab0ea",
              "IPY_MODEL_6c70d082e69f4fd7b2ab2664d7a5c4fa",
              "IPY_MODEL_449cfe6c623148cc90e910d16f7e2e16"
            ],
            "layout": "IPY_MODEL_12b59f932c5e4e0f91d734d2734d3ad9"
          }
        },
        "449cfe6c623148cc90e910d16f7e2e16": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HTMLModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_8c29c360c6bb46b5ad55743720912291",
            "placeholder": "​",
            "style": "IPY_MODEL_573e0c84a3da42fba62f95ed2ccb91c1",
            "value": " 701/701 [00:00&lt;00:00, 5.46kB/s]"
          }
        },
        "4f483afd17aa4368943f7fbd0ddeba4c": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "519d9823101a43fcb3373c9340691da2": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "54c0a9cd436e463b954e203db622af89": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "573e0c84a3da42fba62f95ed2ccb91c1": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "6c41b494477240e5947089e103cfc53d": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "ProgressStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "6c70d082e69f4fd7b2ab2664d7a5c4fa": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "FloatProgressModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_54c0a9cd436e463b954e203db622af89",
            "max": 701,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_d9f7f53be39541f7b2af655c23681b6d",
            "value": 701
          }
        },
        "6d61a3724d9f4fec9b37d1276b259242": {
          "model_module": "@jupyter-widgets/output",
          "model_module_version": "1.0.0",
          "model_name": "OutputModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_13bf8ee801c94f81a68e5d1e1dfce7ee",
            "msg_id": "",
            "outputs": [
              {
                "name": "stdout",
                "output_type": "stream",
                "text": [
                  "Cycle: 15\n",
                  "Accuracy: 0.7972972972972973\n",
                  "Batch index: 1/3\n",
                  "Real class: 1.0\n",
                  "\n",
                  "Title:\n",
                  "Intelligent location of simultaneously active acoustic emission sources:\n",
                  "  Part I\n",
                  "\n",
                  "Abstract:\n",
                  "  The intelligent acoustic emission locator is described in Part I, while Part\n",
                  "II discusses blind source separation, time delay estimation and location of two\n",
                  "simultaneously active continuous acoustic emission sources.\n",
                  "  The location of acoustic emission on complicated aircraft frame structures is\n",
                  "a difficult problem of non-destructive testing. This article describes an\n",
                  "intelligent acoustic emission source locator. The intelligent locator comprises\n",
                  "a sensor antenna and a general regression neural network, which solves the\n",
                  "location problem based on learning from examples. Locator performance was\n",
                  "tested on different test specimens. Tests have shown that the accuracy of\n",
                  "location depends on sound velocity and attenuation in the specimen, the\n",
                  "dimensions of the tested area, and the properties of stored data. The location\n",
                  "accuracy achieved by the intelligent locator is comparable to that obtained by\n",
                  "the conventional triangulation method, while the applicability of the\n",
                  "intelligent locator is more general since analysis of sonic ray paths is\n",
                  "avoided. This is a promising method for non-destructive testing of aircraft\n",
                  "frame structures by the acoustic emission method.\n",
                  "\n"
                ]
              }
            ]
          }
        },
        "7ab12a559474405cb1e29bab8ec4a02e": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "ProgressStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "7eb6c7b6a7b64864804b2375b37a56c0": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "805c09e6ebe54af68126d7869aa9d245": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "VBoxModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_37b1258047d14583a6abf1d6bb44b984",
              "IPY_MODEL_c2ac76677a5a44f5ae8317fc52b29692"
            ],
            "layout": "IPY_MODEL_cbba931d922b426780f5186dfac592c4"
          }
        },
        "899a9ff55b6641bab7f50c566c2f7876": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "8c29c360c6bb46b5ad55743720912291": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "94cc5882db984867b4af2dd13bf28dcf": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "9b9c5c95ebf746d5a1e5f06d96cd3e79": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9f64d642d04e46bc9db94fc2992c1093": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "a51b56005d354fc9abeadcad4d7c4c14": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "ButtonStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "a8a848800f1b4f709d594ac0a688d013": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "ab997738bb014abe9700b6762ec5fc17": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "aed6ac245cc54f649dfadd00cda606c3": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b08d232560564081b9ab172504a3d6e7": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HTMLModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_aed6ac245cc54f649dfadd00cda606c3",
            "placeholder": "​",
            "style": "IPY_MODEL_9f64d642d04e46bc9db94fc2992c1093",
            "value": "Generating train split: 100%"
          }
        },
        "bb0948b78eaa479fbefe3cf988f6ea1d": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "bdc26182b0604220ba7fcdd12aa4b60d": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "c2ac76677a5a44f5ae8317fc52b29692": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "ButtonModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "Other Paper",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_7eb6c7b6a7b64864804b2375b37a56c0",
            "style": "IPY_MODEL_c399b72cbdb247d9ab73886f457c141f",
            "tooltip": "Paper belongs to cs.AI, cs.LG, or cs.CV]"
          }
        },
        "c399b72cbdb247d9ab73886f457c141f": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "ButtonStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "c8aff5b9febf427793a3b682caa01af6": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "cbba931d922b426780f5186dfac592c4": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d9f7f53be39541f7b2af655c23681b6d": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "ProgressStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "dac9ea749aea48888bdb11ce4d0b7e44": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HBoxModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_019b66f303204a24b9d57ab5faef6b0d",
              "IPY_MODEL_f3ee69a2b91d4fa384f557763650f133",
              "IPY_MODEL_fb015057e08c4e5fae36392280603e5b"
            ],
            "layout": "IPY_MODEL_e65cec7450b34bd1a756e46fe37afc84"
          }
        },
        "e65cec7450b34bd1a756e46fe37afc84": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "f3ee69a2b91d4fa384f557763650f133": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "FloatProgressModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_4f483afd17aa4368943f7fbd0ddeba4c",
            "max": 102202622,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_6c41b494477240e5947089e103cfc53d",
            "value": 102202622
          }
        },
        "fb015057e08c4e5fae36392280603e5b": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HTMLModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_9b9c5c95ebf746d5a1e5f06d96cd3e79",
            "placeholder": "​",
            "style": "IPY_MODEL_a8a848800f1b4f709d594ac0a688d013",
            "value": " 102M/102M [00:02&lt;00:00, 56.9MB/s]"
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
